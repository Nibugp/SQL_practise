## 1. Twitter company - Histogram of tweets

SELECT tweet_num as tweet_bucket , COUNT(user_id) AS users_num
FROM 
(SELECT user_id, 
COUNT(tweet_id) as tweet_num 
FROM tweets
WHERE tweet_date BETWEEN '2022-01-01' AND '2022-01-31'
GROUP BY user_id) AS tweet_tweets
GROUP BY tweet_bucket


## 2. LinkedIn SQL Interview Question

SELECT candidate_id 
FROM candidates
WHERE skill IN ('Python' , 'Tableau','PostgreSQL')
LIMIT 1


##3. Page With No Likes
Facebook SQL Interview Question

SELECT page_id FROM
(SELECT a.page_id AS page_id , COUNT(b.liked_date) as total_likes
FROM pages AS a
LEFT JOIN page_likes AS b ON a.page_id = b.page_id
GROUP BY a.page_id
ORDER BY total_likes
LIMIT 2 ) AS total_number_of_likes


## 4.  Filter for rows that have no data present 
Tip: use a WHERE clause. It might look something like this: WHERE column IS NULL
E.g. Unfinished Parts
Tesla SQL Interview Question

SELECT part,assembly_step FROM parts_assembly
WHERE finish_date is NULL
;


## 5. CASE statement to group laptop views into laptop_views column and tablet & phone views into mobile_views

Laptop vs. Mobile Viewership
New York Times SQL Interview Question

SELECT 
SUM(CASE WHEN device_type = 'laptop' THEN 1 ELSE 0 END) AS Laptop_views,
SUM(CASE WHEN device_type IN ('tablet','phone') THEN 1 ELSE 0 END) as mobile_views
FROM viewership;


## 6.To obtain the last and first post per user, try using the MIN and MAX functions, and then substract one from another :

SELECT 
    user_id, 
    MAX(post_date::date) - MIN(post_date::date) AS date_difference
FROM 
    posts
WHERE 
    DATE_PART('year', post_date::date) = 2021
GROUP BY 
    user_id
HAVING 
    COUNT(post_id) > 1;


